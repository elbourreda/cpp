// TODO

   |- Bureaucrat Class
V  |	*  Name  => string const
V  |	*  Grade => int (1 -> 150)  ====> 1 the highest | 150 the lowest,
V  |	*  getName()
V  |	*  getGrade()

V  |-  invalid grade =>  throw an exception :
V  |						> Bureaucrat::GradeTooHighException
V  |						> Bureaucrat::GradeTooLowException.

V  |	*  functions to increment the bureaucrat grade   \    If the grade is out of range => throw the same exceptions as the constructor.
V  |	*  functions to decrement the bureaucrat grade   /    If the grade is out of range => throw the same exceptions as the constructor.
V  |			-> NOTE : (n = 3) increment(n) = 2; 
V  |					  (n = 3) decrement(n) = 4; 


V  |- The thrown exceptions must be catchable using try and catch blocks:
V  |		try
V  |		{
V  |		/* do some stuff with bureaucrats */
V  |		}
V  |		catch (std::exception & e)
V  |		{
V  |		/* handle exception */
V  |		}


V  |- overload of the insertion (<<):
V  |	OUTPUT =>>  " <name>, bureaucrat grade <grade>. "


V  |***  turn in some tests to prove everything works as expected